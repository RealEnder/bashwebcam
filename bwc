#!/bin/bash
# BASHWebCam v0.2, Alex Stanev <alex@stanev.org>
# https://github.com/realender/bashwebcam
# The source code is distributed under GPLv3 license

# Configuration
# FIFO name
RESP=$(mktemp -u)
# Ports
PORT=9000
VPORT=8080
# Video host
VHOST="http://localhost:$VPORT/$(basename $RESP).ogv"
PASS="changeme"
# Configuration end
SALT=$(head -c 64 /dev/urandom | sha512sum -b | head -c 128)
PSALT=$(echo -n $SALT$(echo -n $PASS | sha512sum | head -c 128) | sha512sum | head -c 128)

server_init() {
    if [[ -p $RESP ]]; then
        echo "bwc already runs wild!"
        exit
    fi
    mkfifo $RESP
    # cleanup fifo
    trap "killall -q vlc;killall -q nc;rm -f $RESP;exit" EXIT
    echo "bwc initialized"
}

server_404() {
    cat >$RESP <<EOF
HTTP/1.0 404 Not Found
Content-Type: text/plain
Server: bashwebcam/1.0

404 Not Found
EOF
}

server_return() {
    cat >$RESP <<EOF
HTTP/1.0 200 OK
Cache-Control: no-cache
Content-Type: text/html
Server: bashwebcam/1.0
Connection: Close
Content-Length: ${#1}

$1
EOF
}

server_index() {
    server_return "$(cat <<EOF
<!DOCTYPE html>

<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>BASHWebCam</title>
    <script src="http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/sha512.js"></script>
    <script type="text/javascript">
        var salt="$SALT";
        var url="";
        function doCommand(comm) {
            var psalt = CryptoJS.SHA512(salt+CryptoJS.SHA512(document.getElementById("pass").value));
            var xhReq = new XMLHttpRequest();
            xhReq.open("GET", "/"+comm+"="+psalt, false);
            xhReq.send(null);
            if (xhReq.status == 200)
                return xhReq.responseText;

            return "";
        }
        function doStart() {
            url = doCommand("start");
            if (url == "") {
                alert("Bad password");
                return;
            }
            window.onbeforeunload = function() {
                doCommand("stop");
            }

            setTimeout(function() {
                var bwc = document.getElementById("bwc");
                bwc.src = url;
                bwc.play();
            }, (5000)); 
        }
        function doStop() {
            doCommand("stop");
            var bwc = document.getElementById("bwc");
            bwc.pause();
            bwc.src = "";
        }
    </script>
</head>

<body>
<h1>BASH WebCam view</h1>
<video id="bwc" type='video/ogg; codecs="theora"' preload="none" autoplay="">
Your browser does not support theora video.
</video>
<hr/>
Password: <input id="pass" type="password" />
<input type="button" onclick="doStart();" value="Start" />
<input type="button" onclick="doStop();" value="Stop" />
</body>
</html>
EOF
)"
}

stream_start() {
    if [ -z "$(pidof vlc)" ]; then
        cvlc v4l2:// --sout="#transcode{vcodec=theo,vb=800,scale=0}:http{dst=:$VPORT/$(basename $RESP).ogv}" &
    fi
    server_return "$VHOST"
}

stream_stop() {
    killall -q vlc
    server_return "Stopping..."
}

# Here we start
server_init

while true ; do
    ( cat $RESP ) | nc -l $PORT | (
    REQ=`while read L && [ " " "<" "$L" ] ; do echo "$L" ; done`
    echo "[`date '+%Y-%m-%d %H:%M:%S'`] $REQ" | head -1

    URL="${REQ% HTTP/*}"

    case "$URL" in
        "GET /")
            server_index
            ;;
        "GET /start=$PSALT")
            stream_start
            ;;
        "GET /stop=$PSALT")
            stream_stop
            ;;
        *)
            server_404
            ;;
    esac
    
    )
done